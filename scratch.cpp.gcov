        -:    0:Source:scratch.cpp
        -:    0:Graph:scratch.gcno
        -:    0:Data:scratch.gcda
        -:    0:Runs:3
        -:    0:Programs:1
        -:    1:/*
        -:    2:Write a program that tries to read a double from standard input, and if successful, prints "number: " followed by the number. If a number can't be read, it tries to read a word, and if successful, prints "word: " followed by the word.
        -:    3:
        -:    4:For example, entering "5.5" prints "number: 5.5" and entering "five" prints "word: five". To simplify error handling, you only need to check if the stream evaluates to true or not.
        -:    5:
        -:    6:Optional challenge: always print numbers with with two decimal digits.
        -:    7:*/
        -:    8:/*
        -:    9:#include <iostream>
        -:   10:#include <iomanip>
        -:   11:#include <string>
        -:   12:using namespace std;
        -:   13:
        -:   14:int main() {
        -:   15:  // TODO
        -:   16:  double x;
        -:   17:  string a; 
        -:   18:  cout << "enter a number or word" << endl; 
        -:   19:  cin >> x; 
        -:   20:  if (cin) {
        -:   21:    cout << "number: " << x << endl; 
        -:   22:  } else {
        -:   23:    cin.clear(); 
        -:   24:    cin >> a; 
        -:   25:  }
        -:   26:  if (cin) {
        -:   27:    cout << "word: " << a << endl; 
        -:   28:  } else {
        -:   29:    cout << "number or word not submitted" << endl; 
        -:   30:  }
        -:   31:  
        -:   32:  
        -:   33:  if (cin >> x) {
        -:   34:    cout << "number: " << x << endl; 
        -:   35:  }  else if (cin >> a) {
        -:   36:    cout << "word: " << a << endl; 
        -:   37:  }
        -:   38:}
        -:   39:*/
        -:   40:
        -:   41:/*
        -:   42:Write a program that prompts the user to enter a number of dice.
        -:   43:
        -:   44:If the input cannot be read as an integer, or it is not in the range 1-10, print an error message and ask the user to input it again.
        -:   45:
        -:   46:Once a valid number is input, the program prints out the result of rolling all the dice one by one (again using the rand function). All the die have 6 sides.
        -:   47:
        -:   48:Hint: numeric_limits<streamsize>::max()
        -:   49:
        -:   50:Optional challenge: (over)write the result of the dice rolls to a file name "dice.txt" instead of the console.
        -:   51:*/
        -:   52:/*
        -:   53:#include <iostream>
        -:   54:#include <fstream>
        -:   55:#include <cstdlib>
        -:   56:#include <limits>
        -:   57:using namespace std;
        -:   58:
        -:   59:int main() {
        -:   60:  srand(time(nullptr));
        -:   61:
        -:   62:  // TODO
        -:   63:}
        -:   64:*/
        -:   65:
        -:   66:/*Write a program that prints the sum of integers on each line of a file.
        -:   67:
        -:   68:The program reads from the file “in.txt” line-by-line (stopping on any error reading a line). For each line, it reads the line as a list of integers (stopping processing that line on any error). It writes the sum of the integers on each line to a separate line in standard output.
        -:   69:
        -:   70:You’ll need to create a file to read from. A file containing:
        -:   71:1 2
        -:   72:4 5 6 a 7
        -:   73:100
        -:   74:
        -:   75:Should display:
        -:   76:3
        -:   77:15
        -:   78:100
        -:   79:
        -:   80:Hint: use an ifstream to read from the file, and an istringstream to process each line.
        -:   81:*/
        -:   82:
        -:   83:/*
        -:   84:#include <iostream>
        -:   85:#include <fstream>
        -:   86:#include <sstream>
        -:   87:#include <string>
        -:   88://using namespace std;
        -:   89:using std::istringstream;
        -:   90://using std::cout;
        -:   91:
        -:   92:int main() {
        -:   93:  // TODO
        -:   94:
        -:   95:  ifstream inFile("in.txt"); 
        -:   96:  if (!inFile) {
        -:   97:    cout << "Error opening file" << endl;
        -:   98:    return 1; 
        -:   99:  }
        -:  100:  //istringstream my_stream(inFile); 
        -:  101:  string line; 
        -:  102:  int num; 
        -:  103:  int sum; 
        -:  104:  while (getline(inFile, line)) {
        -:  105:    sum = 0; 
        -:  106:    istringstream myStream(line); 
        -:  107:    while (myStream >> num) {
        -:  108:      //myStream >> num; 
        -:  109:      sum += num; 
        -:  110:    }
        -:  111:    //cout << sum << endl; 
        -:  112:
        -:  113:    //for (int i: line) {
        -:  114:    //  myString >> sum =+ num; 
        -:  115:    //}
        -:  116:    cout << sum << endl; 
        -:  117:  } 
        -:  118:  
        -:  119:}
        -:  120:
        -:  121:
        -:  122:
        -:  123:k
        -:  124:int alt() {
        -:  125:      // Input string
        -:  126:    string a("1 2 3");
        -:  127: 
        -:  128:    // Object class of istringstream
        -:  129:    istringstream my_stream(a);
        -:  130: 
        -:  131:    // Variable to store number n
        -:  132:    int n;
        -:  133: 
        -:  134:    // Stream a number till white space
        -:  135:    // is encountered
        -:  136:    my_stream >> n;
        -:  137: 
        -:  138:    // Print the number
        -:  139:    cout << n << "\n";
        -:  140:}*/
        -:  141:
        -:  142:
        -:  143:///EX0924-A
        -:  144:/*
        -:  145:Write a function named make_ordered that takes two int arguments a and b by reference. If needed, it swaps the values of the arguments so that the the smaller value is stored in a and the larger in b. That is, it orders the values so that a <= b after the function returns.
        -:  146:*/
        -:  147:/*
        -:  148:#include <iostream>
        -:  149:using namespace std;
        -:  150:
        -:  151:// TODO
        -:  152:
        -:  153:void make_ordered(int &x, int &y) {
        -:  154:if (x < y) {
        -:  155:  x = x; 
        -:  156:  y = y; 
        -:  157:}
        -:  158:else if (x > y) {
        -:  159:  int larger = x; 
        -:  160:  x = y;  
        -:  161:  y = larger;  
        -:  162:}
        -:  163:}
        -:  164:
        -:  165:int main() {
        -:  166:  int a = 1;
        -:  167:  int b = 2;
        -:  168:  make_ordered(a, b);
        -:  169:  cout << a << " " << b << endl; // 1 2
        -:  170:
        -:  171:  a = 2;
        -:  172:  b = 1;
        -:  173:  make_ordered(a, b);
        -:  174:  cout << a << " " << b << endl; // 1 2
        -:  175:}*/
        -:  176:
        -:  177:/// EX0924-B
        -:  178:
        -:  179://// EX0927-A
        -:  180:/*
        -:  181:Use gdb (and not cout) to determine the value assigned to result when ii is 5.
        -:  182:
        -:  183:You can paste the code into scratch.cpp from the demo to run in VS Code.
        -:  184:
        -:  185:Optional challenge: if you set mys to 10 in that iteration of the loop (right before result is added to mys), what is the value of result on the next iteration?
        -:  186:*/
        -:  187:
        -:  188:/* ANSWER:
        -:  189:// When ii = 5, result = 15
        -:  190:// Optional: when mys is 10, the next processed result is 20
        -:  191:*/
        -:  192:
        -:  193:/*
        -:  194:int mystery_func(int & x) {
        -:  195:  x = 5 + ((x * x * 2) % 41);
        -:  196:  return x / 2;
        -:  197:}
        -:  198:
        -:  199:int main() {
        -:  200:  int mys = 0;
        -:  201:  for (int ii = 0; ii < 10; ++ ii) {
        -:  202:    int result = mystery_func(mys);
        -:  203:    mys += result;
        -:  204:  }
        -:  205:}
        -:  206:*/
        -:  207:
        -:  208:
        -:  209://EX100124-A
        -:  210:
        -:  211:/*
        -:  212:Use gcov to determine how many times the lines commented LINE 1 and LINE 2 are executed (each).
        -:  213:
        -:  214:You can paste the code into scratch.cpp from the demo to run in VS Code.
        -:  215:
        -:  216:Hint: You may need to change your Makefile.
        -:  217:*/
        -:  218:
        -:  219:/* ANSWER:
        -:  220:LINE 1: TODO
        -:  221:LINE 2: TODO
        -:  222:*/
        -:  223:
        -:  224:///*
        -:  225:#include <iostream>
        -:  226:using namespace std;
        -:  227:
        3:  228:int main() {
        3:  229:    int x = 0;
        3:  230:    int y = 0;
      303:  231:    for (int ii = 0; ii < 100; ++ ii) {
      300:  232:        x = ((x + 1) * 7) % 97; // LINE 1
    14697:  233:        for (int jj = 0; jj < x; ++ jj) {
    14397:  234:            y = ((y + 1) * 5) % 97; // LINE 2
        -:  235:        }
        -:  236:    }
        3:  237:    cout << x << " " << y << endl;
        3:  238:}
        -:  239://*/
        -:  240:
        -:  241:
        -:  242:
        -:  243:
        -:  244://EX100124-B
        -:  245:
        -:  246:/*
        -:  247:Use callgrind to determine whether the program spends more instructions (inclusive) in mystery1 or mystery2.  Include relevant callgrind output in your answer.
        -:  248:
        -:  249:You can paste the code into scratch.cpp from the demo to run in VS Code.
        -:  250:*/
        -:  251:
        -:  252:/* ANSWER:
        -:  253:LINE 1: 2,000
        -:  254:LINE 2: 91,181
        -:  255:-- line 220 ----------------------------------------
        -:  256:     .           LINE 1: TODO
        -:  257:     .           LINE 2: TODO
        -:  258:     .           */
        -:  259:     .           
        -:  260:     .           /*
        -:  261:     .           #include <iostream>
        -:  262:     .           using namespace std;
        -:  263:     .           
        -:  264:     6 ( 0.00%)  int main() {
        -:  265:     1 ( 0.00%)      int x = 0;
        -:  266:     1 ( 0.00%)      int y = 0;
        -:  267:   703 ( 0.02%)      for (int ii = 0; ii < 100; ++ ii) {
        -:  268: 2,000 ( 0.06%)          x = ((x + 1) * 7) % 97; // LINE 1
        -:  269:38,792 ( 1.24%)          for (int jj = 0; jj < x; ++ jj) {
        -:  270:91,181 ( 2.92%)              y = ((y + 1) * 5) % 97; // LINE 2
        -:  271:*/
        -:  272:
        -:  273:/*
        -:  274:#include <iostream>
        -:  275:using namespace std;
        -:  276:
        -:  277:void mystery1() {
        -:  278:    int x = 0;
        -:  279:    int y = 0;
        -:  280:    for (int ii = 0; ii < 1000000; ++ ii) {
        -:  281:        x = ((x + 1) * 7) % 97;
        -:  282:        for (int jj = 0; jj < x; ++ jj) {
        -:  283:            y = ((y + 1) * 5) % 97;
        -:  284:        }
        -:  285:    }
        -:  286:    cout << x << " " << y << endl;
        -:  287:}
        -:  288:
        -:  289:void mystery2() {
        -:  290:    int x = 0;
        -:  291:    int y = 0;
        -:  292:    for (int ii = 0; ii < 100000; ++ ii) {
        -:  293:        x = ((x + 1) * 7) % 5011;
        -:  294:        for (int jj = 0; jj < x; ++ jj) {
        -:  295:            y = ((y + 1) * 5) % 97;
        -:  296:        }
        -:  297:    }
        -:  298:    cout << x << " " << y << endl;
        -:  299:}
        -:  300:
        -:  301:int main() {
        -:  302:    mystery1();
        -:  303:    mystery2();
        -:  304:}
        -:  305:*/
